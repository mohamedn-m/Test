name: Java CI with Maven

on:
  schedule:
    - cron: "30 0 * * *"  # 6:00 AM IST
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    # Step 3: Run Maven Tests and Save Logs
    - name: Run Maven Tests
      run: |
        echo "Running Maven tests..."
        mvn clean test -DsuiteXmlFile=src/test/resources/testng.xml | tee build.log
      shell: bash

    # Step 4: Debug the generated XLSX files
    - name: Verify Test Results
      run: |
        echo "Checking generated test result files..."
        ls -lh src/test/resources/DE_HomePage.xlsx || echo "DE_HomePage.xlsx not found"
        ls -lh src/test/resources/EN_HomePage.xlsx || echo "EN_HomePage.xlsx not found"

    # Step 5: Upload Test Results and Logs as Artifacts
    - name: Upload Test Results and Logs
      if: always() # Runs even if tests fail
      uses: actions/upload-artifact@v3
      with:
        name: test-results-and-logs
        path: |
          src/test/resources/DE_HomePage.xlsx
          src/test/resources/EN_HomePage.xlsx
          build.log

    # Step 6: Generate Public Artifact Download Link
    - name: Generate Artifact Download Link
      if: always()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Fetching artifact download link..."

        # Fetch artifacts for the current run
        RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
        "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

        echo "API Response: $RESPONSE"

        # Extract the download URL for the specific artifact
        ARTIFACT_URL=$(echo "$RESPONSE" | jq -r '.artifacts[] | select(.name=="test-results-and-logs") | .archive_download_url')

        # Verify the artifact URL
        if [ -z "$ARTIFACT_URL" ] || [ "$ARTIFACT_URL" == "null" ]; then
          echo "Failed to retrieve artifact URL. Verify artifact upload step."
          exit 1
        fi

        echo "Artifact download link (no sign-in required for public repositories):"
        echo "$ARTIFACT_URL"
